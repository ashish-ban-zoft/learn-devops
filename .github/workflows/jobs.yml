name: Deploy to env

on:
  pull_request:
    types:
      - closed
    branches:
      - "master"
      - "production"
      - "staging"
      - "dev"

jobs:
  if_merged:
    if: github.event.pull_request.merged == true || github.event_name == 'workflow_dispatch' 
    name: Promote
    runs-on: ubuntu-latest
    environment: dev
    defaults:
      run:
        shell: bash
    steps:
      - name: "Checkout Code"
        uses: actions/checkout@v2

      - name: Promote
        env:
          JOB_ENV: ${{ job.environment }}
          SLUG: ${{ github.ref_name }}
          VAR: ${{ toJSON(vars) }}

        run: |
          echo Running on $(basename ${GITHUB_REF}) branch
          echo "$JOB_ENV"
          echo "$SLUG"
          echo "$VAR"
    

  logcontext:
    runs-on: ubuntu-latest
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJSON(github) }}
          
        run: echo "$GITHUB_CONTEXT"

  changedfiles:
    runs-on: ubuntu-latest
    # Map a step output to a job output
    outputs: 
      all: ${{ steps.changes.outputs.all }}
    steps: 
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Get Changed files
        id: changes
        # Set outputs using the command
        run: |
          echo "::set-output name=all::$(git diff --name-only --diff-filter=ACMRT ${{ github.event.pull_request.base.sha }} ${{ github.sha }} | xargs )"
          echo "::set-output name=all::$(git diff --name-only --diff-filter=ACMRT ${{ github.event.pull_request.base.sha }} ${{ github.sha }} | grep .ts$ | xargs )"
          echo "Changed files are "
          echo "$(git diff --name-only --diff-filter=ACMRT ${{ github.event.pull_request.base.sha }} ${{ github.sha }} | grep .ts$ | xargs )"
        
  lint:
      runs-on: ubuntu-latest
      # require the first job to have ran
      needs: changedfiles
      # only run there are changed files
      # if: ${{needs.changedfiles.outputs.all}}
      steps:
        - name: echo changed files
          run: echo ${{needs.changedfiles.outputs.all}}